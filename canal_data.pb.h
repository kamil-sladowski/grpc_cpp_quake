// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: canal_data.proto

#ifndef PROTOBUF_canal_5fdata_2eproto__INCLUDED
#define PROTOBUF_canal_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_canal_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsImageDataMessageImpl();
void InitDefaultsImageDataMessage();
void InitDefaultsMouseMessageImpl();
void InitDefaultsMouseMessage();
void InitDefaultsMouseButtonMessageImpl();
void InitDefaultsMouseButtonMessage();
void InitDefaultsInjuryDataMessageImpl();
void InitDefaultsInjuryDataMessage();
void InitDefaultsQuakeEventMessageImpl();
void InitDefaultsQuakeEventMessage();
void InitDefaultsServerConfirmationImpl();
void InitDefaultsServerConfirmation();
inline void InitDefaults() {
  InitDefaultsImageDataMessage();
  InitDefaultsMouseMessage();
  InitDefaultsMouseButtonMessage();
  InitDefaultsInjuryDataMessage();
  InitDefaultsQuakeEventMessage();
  InitDefaultsServerConfirmation();
}
}  // namespace protobuf_canal_5fdata_2eproto
namespace grpccommunication {
class ImageDataMessage;
class ImageDataMessageDefaultTypeInternal;
extern ImageDataMessageDefaultTypeInternal _ImageDataMessage_default_instance_;
class InjuryDataMessage;
class InjuryDataMessageDefaultTypeInternal;
extern InjuryDataMessageDefaultTypeInternal _InjuryDataMessage_default_instance_;
class MouseButtonMessage;
class MouseButtonMessageDefaultTypeInternal;
extern MouseButtonMessageDefaultTypeInternal _MouseButtonMessage_default_instance_;
class MouseMessage;
class MouseMessageDefaultTypeInternal;
extern MouseMessageDefaultTypeInternal _MouseMessage_default_instance_;
class QuakeEventMessage;
class QuakeEventMessageDefaultTypeInternal;
extern QuakeEventMessageDefaultTypeInternal _QuakeEventMessage_default_instance_;
class ServerConfirmation;
class ServerConfirmationDefaultTypeInternal;
extern ServerConfirmationDefaultTypeInternal _ServerConfirmation_default_instance_;
}  // namespace grpccommunication
namespace grpccommunication {

// ===================================================================

class ImageDataMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpccommunication.ImageDataMessage) */ {
 public:
  ImageDataMessage();
  virtual ~ImageDataMessage();

  ImageDataMessage(const ImageDataMessage& from);

  inline ImageDataMessage& operator=(const ImageDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageDataMessage(ImageDataMessage&& from) noexcept
    : ImageDataMessage() {
    *this = ::std::move(from);
  }

  inline ImageDataMessage& operator=(ImageDataMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageDataMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageDataMessage* internal_default_instance() {
    return reinterpret_cast<const ImageDataMessage*>(
               &_ImageDataMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ImageDataMessage* other);
  friend void swap(ImageDataMessage& a, ImageDataMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageDataMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageDataMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImageDataMessage& from);
  void MergeFrom(const ImageDataMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImageDataMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes image_name = 5;
  void clear_image_name();
  static const int kImageNameFieldNumber = 5;
  const ::std::string& image_name() const;
  void set_image_name(const ::std::string& value);
  #if LANG_CXX11
  void set_image_name(::std::string&& value);
  #endif
  void set_image_name(const char* value);
  void set_image_name(const void* value, size_t size);
  ::std::string* mutable_image_name();
  ::std::string* release_image_name();
  void set_allocated_image_name(::std::string* image_name);

  // bool negative = 1;
  void clear_negative();
  static const int kNegativeFieldNumber = 1;
  bool negative() const;
  void set_negative(bool value);

  // bool neutral = 2;
  void clear_neutral();
  static const int kNeutralFieldNumber = 2;
  bool neutral() const;
  void set_neutral(bool value);

  // bool positive = 3;
  void clear_positive();
  static const int kPositiveFieldNumber = 3;
  bool positive() const;
  void set_positive(bool value);

  // bool black_screen = 4;
  void clear_black_screen();
  static const int kBlackScreenFieldNumber = 4;
  bool black_screen() const;
  void set_black_screen(bool value);

  // @@protoc_insertion_point(class_scope:grpccommunication.ImageDataMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr image_name_;
  bool negative_;
  bool neutral_;
  bool positive_;
  bool black_screen_;
  mutable int _cached_size_;
  friend struct ::protobuf_canal_5fdata_2eproto::TableStruct;
  friend void ::protobuf_canal_5fdata_2eproto::InitDefaultsImageDataMessageImpl();
};
// -------------------------------------------------------------------

class MouseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpccommunication.MouseMessage) */ {
 public:
  MouseMessage();
  virtual ~MouseMessage();

  MouseMessage(const MouseMessage& from);

  inline MouseMessage& operator=(const MouseMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MouseMessage(MouseMessage&& from) noexcept
    : MouseMessage() {
    *this = ::std::move(from);
  }

  inline MouseMessage& operator=(MouseMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MouseMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MouseMessage* internal_default_instance() {
    return reinterpret_cast<const MouseMessage*>(
               &_MouseMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MouseMessage* other);
  friend void swap(MouseMessage& a, MouseMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MouseMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  MouseMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MouseMessage& from);
  void MergeFrom(const MouseMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MouseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 move_x = 2;
  void clear_move_x();
  static const int kMoveXFieldNumber = 2;
  ::google::protobuf::int32 move_x() const;
  void set_move_x(::google::protobuf::int32 value);

  // int32 move_y = 3;
  void clear_move_y();
  static const int kMoveYFieldNumber = 3;
  ::google::protobuf::int32 move_y() const;
  void set_move_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:grpccommunication.MouseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 move_x_;
  ::google::protobuf::int32 move_y_;
  mutable int _cached_size_;
  friend struct ::protobuf_canal_5fdata_2eproto::TableStruct;
  friend void ::protobuf_canal_5fdata_2eproto::InitDefaultsMouseMessageImpl();
};
// -------------------------------------------------------------------

class MouseButtonMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpccommunication.MouseButtonMessage) */ {
 public:
  MouseButtonMessage();
  virtual ~MouseButtonMessage();

  MouseButtonMessage(const MouseButtonMessage& from);

  inline MouseButtonMessage& operator=(const MouseButtonMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MouseButtonMessage(MouseButtonMessage&& from) noexcept
    : MouseButtonMessage() {
    *this = ::std::move(from);
  }

  inline MouseButtonMessage& operator=(MouseButtonMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MouseButtonMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MouseButtonMessage* internal_default_instance() {
    return reinterpret_cast<const MouseButtonMessage*>(
               &_MouseButtonMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MouseButtonMessage* other);
  friend void swap(MouseButtonMessage& a, MouseButtonMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MouseButtonMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  MouseButtonMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MouseButtonMessage& from);
  void MergeFrom(const MouseButtonMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MouseButtonMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 move_x = 2;
  void clear_move_x();
  static const int kMoveXFieldNumber = 2;
  ::google::protobuf::int32 move_x() const;
  void set_move_x(::google::protobuf::int32 value);

  // int32 move_y = 3;
  void clear_move_y();
  static const int kMoveYFieldNumber = 3;
  ::google::protobuf::int32 move_y() const;
  void set_move_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:grpccommunication.MouseButtonMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 move_x_;
  ::google::protobuf::int32 move_y_;
  mutable int _cached_size_;
  friend struct ::protobuf_canal_5fdata_2eproto::TableStruct;
  friend void ::protobuf_canal_5fdata_2eproto::InitDefaultsMouseButtonMessageImpl();
};
// -------------------------------------------------------------------

class InjuryDataMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpccommunication.InjuryDataMessage) */ {
 public:
  InjuryDataMessage();
  virtual ~InjuryDataMessage();

  InjuryDataMessage(const InjuryDataMessage& from);

  inline InjuryDataMessage& operator=(const InjuryDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InjuryDataMessage(InjuryDataMessage&& from) noexcept
    : InjuryDataMessage() {
    *this = ::std::move(from);
  }

  inline InjuryDataMessage& operator=(InjuryDataMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InjuryDataMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InjuryDataMessage* internal_default_instance() {
    return reinterpret_cast<const InjuryDataMessage*>(
               &_InjuryDataMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(InjuryDataMessage* other);
  friend void swap(InjuryDataMessage& a, InjuryDataMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InjuryDataMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  InjuryDataMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InjuryDataMessage& from);
  void MergeFrom(const InjuryDataMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InjuryDataMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 injury_id = 2;
  void clear_injury_id();
  static const int kInjuryIdFieldNumber = 2;
  ::google::protobuf::int32 injury_id() const;
  void set_injury_id(::google::protobuf::int32 value);

  // int32 player_id = 3;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // int32 new_hp_value = 4;
  void clear_new_hp_value();
  static const int kNewHpValueFieldNumber = 4;
  ::google::protobuf::int32 new_hp_value() const;
  void set_new_hp_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:grpccommunication.InjuryDataMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 injury_id_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 new_hp_value_;
  mutable int _cached_size_;
  friend struct ::protobuf_canal_5fdata_2eproto::TableStruct;
  friend void ::protobuf_canal_5fdata_2eproto::InitDefaultsInjuryDataMessageImpl();
};
// -------------------------------------------------------------------

class QuakeEventMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpccommunication.QuakeEventMessage) */ {
 public:
  QuakeEventMessage();
  virtual ~QuakeEventMessage();

  QuakeEventMessage(const QuakeEventMessage& from);

  inline QuakeEventMessage& operator=(const QuakeEventMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuakeEventMessage(QuakeEventMessage&& from) noexcept
    : QuakeEventMessage() {
    *this = ::std::move(from);
  }

  inline QuakeEventMessage& operator=(QuakeEventMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuakeEventMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuakeEventMessage* internal_default_instance() {
    return reinterpret_cast<const QuakeEventMessage*>(
               &_QuakeEventMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(QuakeEventMessage* other);
  friend void swap(QuakeEventMessage& a, QuakeEventMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuakeEventMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  QuakeEventMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuakeEventMessage& from);
  void MergeFrom(const QuakeEventMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuakeEventMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 event_id = 2;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::int32 event_id() const;
  void set_event_id(::google::protobuf::int32 value);

  // int32 player_id = 3;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:grpccommunication.QuakeEventMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_canal_5fdata_2eproto::TableStruct;
  friend void ::protobuf_canal_5fdata_2eproto::InitDefaultsQuakeEventMessageImpl();
};
// -------------------------------------------------------------------

class ServerConfirmation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpccommunication.ServerConfirmation) */ {
 public:
  ServerConfirmation();
  virtual ~ServerConfirmation();

  ServerConfirmation(const ServerConfirmation& from);

  inline ServerConfirmation& operator=(const ServerConfirmation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerConfirmation(ServerConfirmation&& from) noexcept
    : ServerConfirmation() {
    *this = ::std::move(from);
  }

  inline ServerConfirmation& operator=(ServerConfirmation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerConfirmation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerConfirmation* internal_default_instance() {
    return reinterpret_cast<const ServerConfirmation*>(
               &_ServerConfirmation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ServerConfirmation* other);
  friend void swap(ServerConfirmation& a, ServerConfirmation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerConfirmation* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerConfirmation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerConfirmation& from);
  void MergeFrom(const ServerConfirmation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerConfirmation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes confirm = 1;
  void clear_confirm();
  static const int kConfirmFieldNumber = 1;
  const ::std::string& confirm() const;
  void set_confirm(const ::std::string& value);
  #if LANG_CXX11
  void set_confirm(::std::string&& value);
  #endif
  void set_confirm(const char* value);
  void set_confirm(const void* value, size_t size);
  ::std::string* mutable_confirm();
  ::std::string* release_confirm();
  void set_allocated_confirm(::std::string* confirm);

  // @@protoc_insertion_point(class_scope:grpccommunication.ServerConfirmation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr confirm_;
  mutable int _cached_size_;
  friend struct ::protobuf_canal_5fdata_2eproto::TableStruct;
  friend void ::protobuf_canal_5fdata_2eproto::InitDefaultsServerConfirmationImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ImageDataMessage

// bool negative = 1;
inline void ImageDataMessage::clear_negative() {
  negative_ = false;
}
inline bool ImageDataMessage::negative() const {
  // @@protoc_insertion_point(field_get:grpccommunication.ImageDataMessage.negative)
  return negative_;
}
inline void ImageDataMessage::set_negative(bool value) {
  
  negative_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.ImageDataMessage.negative)
}

// bool neutral = 2;
inline void ImageDataMessage::clear_neutral() {
  neutral_ = false;
}
inline bool ImageDataMessage::neutral() const {
  // @@protoc_insertion_point(field_get:grpccommunication.ImageDataMessage.neutral)
  return neutral_;
}
inline void ImageDataMessage::set_neutral(bool value) {
  
  neutral_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.ImageDataMessage.neutral)
}

// bool positive = 3;
inline void ImageDataMessage::clear_positive() {
  positive_ = false;
}
inline bool ImageDataMessage::positive() const {
  // @@protoc_insertion_point(field_get:grpccommunication.ImageDataMessage.positive)
  return positive_;
}
inline void ImageDataMessage::set_positive(bool value) {
  
  positive_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.ImageDataMessage.positive)
}

// bool black_screen = 4;
inline void ImageDataMessage::clear_black_screen() {
  black_screen_ = false;
}
inline bool ImageDataMessage::black_screen() const {
  // @@protoc_insertion_point(field_get:grpccommunication.ImageDataMessage.black_screen)
  return black_screen_;
}
inline void ImageDataMessage::set_black_screen(bool value) {
  
  black_screen_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.ImageDataMessage.black_screen)
}

// bytes image_name = 5;
inline void ImageDataMessage::clear_image_name() {
  image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImageDataMessage::image_name() const {
  // @@protoc_insertion_point(field_get:grpccommunication.ImageDataMessage.image_name)
  return image_name_.GetNoArena();
}
inline void ImageDataMessage::set_image_name(const ::std::string& value) {
  
  image_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpccommunication.ImageDataMessage.image_name)
}
#if LANG_CXX11
inline void ImageDataMessage::set_image_name(::std::string&& value) {
  
  image_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpccommunication.ImageDataMessage.image_name)
}
#endif
inline void ImageDataMessage::set_image_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpccommunication.ImageDataMessage.image_name)
}
inline void ImageDataMessage::set_image_name(const void* value, size_t size) {
  
  image_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpccommunication.ImageDataMessage.image_name)
}
inline ::std::string* ImageDataMessage::mutable_image_name() {
  
  // @@protoc_insertion_point(field_mutable:grpccommunication.ImageDataMessage.image_name)
  return image_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageDataMessage::release_image_name() {
  // @@protoc_insertion_point(field_release:grpccommunication.ImageDataMessage.image_name)
  
  return image_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageDataMessage::set_allocated_image_name(::std::string* image_name) {
  if (image_name != NULL) {
    
  } else {
    
  }
  image_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_name);
  // @@protoc_insertion_point(field_set_allocated:grpccommunication.ImageDataMessage.image_name)
}

// -------------------------------------------------------------------

// MouseMessage

// int64 timestamp = 1;
inline void MouseMessage::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MouseMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:grpccommunication.MouseMessage.timestamp)
  return timestamp_;
}
inline void MouseMessage::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.MouseMessage.timestamp)
}

// int32 move_x = 2;
inline void MouseMessage::clear_move_x() {
  move_x_ = 0;
}
inline ::google::protobuf::int32 MouseMessage::move_x() const {
  // @@protoc_insertion_point(field_get:grpccommunication.MouseMessage.move_x)
  return move_x_;
}
inline void MouseMessage::set_move_x(::google::protobuf::int32 value) {
  
  move_x_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.MouseMessage.move_x)
}

// int32 move_y = 3;
inline void MouseMessage::clear_move_y() {
  move_y_ = 0;
}
inline ::google::protobuf::int32 MouseMessage::move_y() const {
  // @@protoc_insertion_point(field_get:grpccommunication.MouseMessage.move_y)
  return move_y_;
}
inline void MouseMessage::set_move_y(::google::protobuf::int32 value) {
  
  move_y_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.MouseMessage.move_y)
}

// -------------------------------------------------------------------

// MouseButtonMessage

// int64 timestamp = 1;
inline void MouseButtonMessage::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MouseButtonMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:grpccommunication.MouseButtonMessage.timestamp)
  return timestamp_;
}
inline void MouseButtonMessage::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.MouseButtonMessage.timestamp)
}

// int32 move_x = 2;
inline void MouseButtonMessage::clear_move_x() {
  move_x_ = 0;
}
inline ::google::protobuf::int32 MouseButtonMessage::move_x() const {
  // @@protoc_insertion_point(field_get:grpccommunication.MouseButtonMessage.move_x)
  return move_x_;
}
inline void MouseButtonMessage::set_move_x(::google::protobuf::int32 value) {
  
  move_x_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.MouseButtonMessage.move_x)
}

// int32 move_y = 3;
inline void MouseButtonMessage::clear_move_y() {
  move_y_ = 0;
}
inline ::google::protobuf::int32 MouseButtonMessage::move_y() const {
  // @@protoc_insertion_point(field_get:grpccommunication.MouseButtonMessage.move_y)
  return move_y_;
}
inline void MouseButtonMessage::set_move_y(::google::protobuf::int32 value) {
  
  move_y_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.MouseButtonMessage.move_y)
}

// -------------------------------------------------------------------

// InjuryDataMessage

// int64 timestamp = 1;
inline void InjuryDataMessage::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InjuryDataMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:grpccommunication.InjuryDataMessage.timestamp)
  return timestamp_;
}
inline void InjuryDataMessage::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.InjuryDataMessage.timestamp)
}

// int32 injury_id = 2;
inline void InjuryDataMessage::clear_injury_id() {
  injury_id_ = 0;
}
inline ::google::protobuf::int32 InjuryDataMessage::injury_id() const {
  // @@protoc_insertion_point(field_get:grpccommunication.InjuryDataMessage.injury_id)
  return injury_id_;
}
inline void InjuryDataMessage::set_injury_id(::google::protobuf::int32 value) {
  
  injury_id_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.InjuryDataMessage.injury_id)
}

// int32 player_id = 3;
inline void InjuryDataMessage::clear_player_id() {
  player_id_ = 0;
}
inline ::google::protobuf::int32 InjuryDataMessage::player_id() const {
  // @@protoc_insertion_point(field_get:grpccommunication.InjuryDataMessage.player_id)
  return player_id_;
}
inline void InjuryDataMessage::set_player_id(::google::protobuf::int32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.InjuryDataMessage.player_id)
}

// int32 new_hp_value = 4;
inline void InjuryDataMessage::clear_new_hp_value() {
  new_hp_value_ = 0;
}
inline ::google::protobuf::int32 InjuryDataMessage::new_hp_value() const {
  // @@protoc_insertion_point(field_get:grpccommunication.InjuryDataMessage.new_hp_value)
  return new_hp_value_;
}
inline void InjuryDataMessage::set_new_hp_value(::google::protobuf::int32 value) {
  
  new_hp_value_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.InjuryDataMessage.new_hp_value)
}

// -------------------------------------------------------------------

// QuakeEventMessage

// int64 timestamp = 1;
inline void QuakeEventMessage::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QuakeEventMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:grpccommunication.QuakeEventMessage.timestamp)
  return timestamp_;
}
inline void QuakeEventMessage::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.QuakeEventMessage.timestamp)
}

// int32 event_id = 2;
inline void QuakeEventMessage::clear_event_id() {
  event_id_ = 0;
}
inline ::google::protobuf::int32 QuakeEventMessage::event_id() const {
  // @@protoc_insertion_point(field_get:grpccommunication.QuakeEventMessage.event_id)
  return event_id_;
}
inline void QuakeEventMessage::set_event_id(::google::protobuf::int32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.QuakeEventMessage.event_id)
}

// int32 player_id = 3;
inline void QuakeEventMessage::clear_player_id() {
  player_id_ = 0;
}
inline ::google::protobuf::int32 QuakeEventMessage::player_id() const {
  // @@protoc_insertion_point(field_get:grpccommunication.QuakeEventMessage.player_id)
  return player_id_;
}
inline void QuakeEventMessage::set_player_id(::google::protobuf::int32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:grpccommunication.QuakeEventMessage.player_id)
}

// -------------------------------------------------------------------

// ServerConfirmation

// bytes confirm = 1;
inline void ServerConfirmation::clear_confirm() {
  confirm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerConfirmation::confirm() const {
  // @@protoc_insertion_point(field_get:grpccommunication.ServerConfirmation.confirm)
  return confirm_.GetNoArena();
}
inline void ServerConfirmation::set_confirm(const ::std::string& value) {
  
  confirm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpccommunication.ServerConfirmation.confirm)
}
#if LANG_CXX11
inline void ServerConfirmation::set_confirm(::std::string&& value) {
  
  confirm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpccommunication.ServerConfirmation.confirm)
}
#endif
inline void ServerConfirmation::set_confirm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  confirm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpccommunication.ServerConfirmation.confirm)
}
inline void ServerConfirmation::set_confirm(const void* value, size_t size) {
  
  confirm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpccommunication.ServerConfirmation.confirm)
}
inline ::std::string* ServerConfirmation::mutable_confirm() {
  
  // @@protoc_insertion_point(field_mutable:grpccommunication.ServerConfirmation.confirm)
  return confirm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerConfirmation::release_confirm() {
  // @@protoc_insertion_point(field_release:grpccommunication.ServerConfirmation.confirm)
  
  return confirm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerConfirmation::set_allocated_confirm(::std::string* confirm) {
  if (confirm != NULL) {
    
  } else {
    
  }
  confirm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confirm);
  // @@protoc_insertion_point(field_set_allocated:grpccommunication.ServerConfirmation.confirm)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpccommunication

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_canal_5fdata_2eproto__INCLUDED
